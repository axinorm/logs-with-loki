# -- Overrides the chart's computed fullname
fullnameOverride: "loki"

# -- Deployment mode lets you specify how to deploy Loki.
# There are 3 options:
# - SingleBinary: Loki is deployed as a single binary, useful for small installs typically without HA, up to a few tens of GB/day.
# - SimpleScalable: Loki is deployed as 3 targets: read, write, and backend. Useful for medium installs easier to manage than distributed, up to a about 1TB/day.
# - Distributed: Loki is deployed as individual microservices. The most complicated but most capable, useful for large installs, typically over 1TB/day.
# There are also 2 additional modes used for migrating between deployment modes:
# - SingleBinary<->SimpleScalable: Migrate from SingleBinary to SimpleScalable (or vice versa)
# - SimpleScalable<->Distributed: Migrate from SimpleScalable to Distributed (or vice versa)
# Note: SimpleScalable and Distributed REQUIRE the use of object storage.
deploymentMode: SimpleScalable

# -- Configuration for running Loki
# @default -- See values.yaml
loki:
  # -- Check https://grafana.com/docs/loki/latest/configuration/#common_config for more info on how to provide a common configuration
  commonConfig:
    replication_factor: 1

  # -- Storage config. Providing this will automatically populate all necessary storage configs in the templated config.
  # -- In case of using thanos storage, enable use_thanos_objstore and the configuration should be done inside the object_store section.
  storage:
    # Loki requires a bucket for chunks and the ruler. GEL requires a third bucket for the admin API.
    # Please provide these values if you are using object storage.
    # bucketNames:
    #   chunks: FIXME
    #   ruler: FIXME
    #   admin: FIXME
    type: s3
    s3:
      endpoint: loki-minio:9100
      accessKeyId: grafana-loki
      secretAccessKey: supersecretlokipassword
      s3ForcePathStyle: true
      insecure: true

  # -- Check https://grafana.com/docs/loki/latest/configuration/#schema_config for more info on how to configure schemas
  schemaConfig:
    configs:
      - from: 2025-02-01
        object_store: s3
        store: tsdb
        schema: v13
        index:
          prefix: index_
          period: 24h

  # -- Limits config
  limits_config:
    allow_structured_metadata: true
    volume_enabled: true

  # --  Optional pattern ingester configuration
  pattern_ingester:
    enabled: true
  # --  Optional querier configuration
  querier:
    # Default is 4, if you have enough memory and CPU you can increase, reduce if OOMing
    max_concurrent: 4
  # --  Optional ingester configuration
  ingester:
    chunk_encoding: snappy

# Configuration for the write pod(s)
write:
  # -- Number of replicas for the write
  replicas: 1
# --  Configuration for the read pod(s)
read:
  # -- Number of replicas for the read
  replicas: 1
# --  Configuration for the backend pod(s)
backend:
  # -- Number of replicas for the backend
  replicas: 1
# Configuration for the single binary node(s)
singleBinary:
  # -- Number of replicas for the single binary
  replicas: 0

# -- Configuration for the minio subchart
minio:
  enabled: true
  replicas: 1
  # Minio requires 2 to 16 drives for erasure code (drivesPerNode * replicas)
  # https://docs.min.io/docs/minio-erasure-code-quickstart-guide
  # Since we only have 1 replica, that means 2 drives must be used.
  drivesPerNode: 2
  # root user; not used for GEL authentication
  rootUser: root-user
  rootPassword: supersecretpassword
  # The first user in the list below is used for Loki/GEL authentication.
  # You can add additional users if desired; they will not impact Loki/GEL.
  # `accessKey` = username, `secretKey` = password
  users:
    - accessKey: grafana-loki
      secretKey: supersecretlokipassword
      policy: readwrite
  buckets:
    - name: chunks
      policy: none
      purge: false
    - name: ruler
      policy: none
      purge: false
    - name: admin
      policy: none
      purge: false
